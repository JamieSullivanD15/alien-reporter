{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/data/data.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;AClB2C;AACN;AACN;AAG/B,IAAM,GAAG,GAAG,iDAAiD,CAAC;AAG9D,IAAa,YAAY;IAKvB,sBACS,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAJX,mBAAc,GAAoB,EAAE,CAAC;QAC7C,aAAQ,GAAG,EAAc,CAAC;QAKxB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEM,mCAAY,GAAnB,UAAoB,cAAmB;QACrC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAEM,mCAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,8BAAO,GAAP;QAAA,iBAWC;QAVC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACtB,SAAS,CACR,cAAI;YACF,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACrC,KAAI,CAAC,iBAAiB,EAAE;QAC1B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QACpB,CAAC,CACF,CAAC;IACN,CAAC;IAED,wCAAiB,GAAjB;QACE,IAAI,SAAc,CAAC;QAEnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAEH,mBAAC;AAAD,CAAC;AA3CY,YAAY;IADxB,yEAAU,EAAE;qCAOI,2DAAI;GANR,YAAY,CA2CxB;AA3CwB;;;;;;;;;;;;ACRkD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AACV;AAEH;AACc;AA4BtD,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IA1BrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;SACN;QACD,OAAO,EAAE;YACP,gFAAa;YACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;gBACE,KAAK,EAAE;oBACL,EAAE,YAAY,EAAE,yDAAyD,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;iBAC9J;aACF,CAAC;YACE,iEAAU;SACX;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;SACN;QACD,SAAS,EAAE;YACT,2EAAS;YACT,iFAAY;YACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;YACpD,0EAAY;YACZ,iEAAU;SACX;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACpCoB;AACD;AACY;AACM;AAK3D,IAAa,KAAK;IAGhB,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,eAAe,CAAC;QAG7B,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AAXY,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAIgF;AAQjF;SAXY,KAAK,2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 108\n// module chunks = 1","var map = {\n\t\"../pages/sightings/sightings.module\": [\n\t\t264,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 150;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Sighting } from '../../models/sighting-model';\n\nconst URL = 'http://www.mocky.io/v2/59f7760a2f0000ab1d55864e';\n\n/*\n  Data provider to acquire data from api and assign it to an array.\n  Has getter and setter functions as well as a function to format\n  date and time of sighting objects.\n*/\n\n@Injectable()\nexport class DataProvider {\n\n  private alienSightings: Array<Sighting> = [];\n\n  constructor(\n    public http: Http\n  ) {\n    // Upon startup, invoke JSON endpoint and assign data to alienSightings array\n    this.getData();\n  }\n\n  // Setter\n  public setSightings(alienSightings: any) {\n    this.alienSightings = alienSightings;\n  }\n\n  // Getter\n  public getSightings() {\n    return this.alienSightings;\n  }\n\n  /*\n    Call JSON endpoint from URL constant,\n    if successful assign data and format date and time of alienSightings,\n    if unsuccesful log error.\n  */\n  getData() {\n    return this.http.get(URL)\n      .subscribe(\n        data => {\n          this.alienSightings.push(data.json()),\n          this.formatDateAndTime()\n        },\n        error => {\n          console.log(error)\n        }\n      );\n  }\n\n  /*\n    Date and time are formatted by splitting timestamp into 2 elements,\n    date is the first element, time is the second.\n    Date is again split into 3 elements and then reorganised to display in the format of dd/mm/yyy.\n    Time is split into 2 elements and the first element is assigned.\n    This is done for every object in alienSightings array.\n  */\n  formatDateAndTime() {\n    var splitDate: any;\n\n    for (let i = 0; i < this.alienSightings.length; i++) {\n      this.alienSightings[i].time = this.alienSightings[i].lastChangedDate.split('T')[1].split('+')[0];\n      this.alienSightings[i].date = this.alienSightings[i].lastChangedDate.split('T')[0];\n      splitDate = this.alienSightings[i].date.split('-');\n      this.alienSightings[i].date = splitDate[2] + '/' + splitDate[1] + '/' + splitDate[0];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data/data.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\n\nimport { MyApp } from './app.component';\nimport { DataProvider } from '../providers/data/data';\n\n@NgModule({\n  declarations: [\n    MyApp\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(\n      MyApp,\n        {\n          iconMode: 'md',\n          mode    : 'md',\n          useHash : false,\n        }\n      ),\n    HttpModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    DataProvider,\n    HttpModule\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = 'SightingsPage';\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}